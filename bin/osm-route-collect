#!/usr/bin/env python
# -*- coding: UTF-8 -*-

# osm-route-collect
#
# Build an output data structure that is each OSM route with all of its member
# ways as children.
#
#
# Author: Adam Franco
# https://github.com/adamfranco/curvature
# Copyright 2022 Adam Franco
# License: GNU General Public License Version 3 or later

import os
import sys

# Add our parent folder to our path
sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))

import argparse
from OsmRouteCompare.collector import RouteCollector
import msgpack
import time
import resource

parser = argparse.ArgumentParser(description='Build collections of OSM routes and their member ways from an Open Street Map (OSM) PBF file.')
parser.add_argument('-v', action='store_true', help='Verbose mode, showing status output')
parser.add_argument('--highway_types', type=str, default='', help='a list of the highway types that should be included. The default is empty, which will include a ways with a \'highway\' tag.')
parser.add_argument('file', type=argparse.FileType('r'), nargs='+', help='the input file. Should be an OSM XML file or PBF file.')
args = parser.parse_args()

# Instantiate our collector
collector = RouteCollector()

# Configure settings based on the command-line arguments
collector.verbose = args.v
if args.highway_types:
    collector.roads = args.highway_types.split(',')

def output(collection):
    sys.stdout.buffer.write(msgpack.packb(collection, use_bin_type=True))
# start parsing
for file in args.file:
    collector.parse(file.name, output)
